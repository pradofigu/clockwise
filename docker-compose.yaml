version: "3.7"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: clockwise-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    depends_on:
      - app-database
    networks:
      - clockwise-network

  app-database:
    image: mysql:8.0.30-debian
    container_name: clockwise-app-database
    restart: always
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=clockwise
      - TZ=America/Sao_Paulo
      - MYSQL_INITDB_SKIP_TZINFO=true
    networks:
      - clockwise-network

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    container_name: clockwise-keycloak
    command: start-dev --log-level=INFO
    volumes:
      - ./config/keycloak/disable-theme-cache.cli:/opt  /startup-scripts/disable-theme-cache.cli
      - ./config/keycloak/themes/clockwise:/opt/keycloak/themes/clockwise
      - keycloak_data:/var/lib/keycloak/data
    environment:
      - KC_DB=postgres
      - KC_PROXY=edge
      - KC_DB_URL_HOST=auth-database
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_PASSWORD=password
      - KC_DB_USERNAME=keycloak
      - KC_DB_SCHEMA=public
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    ports:
      - "8080:8080"
      - "8787:8787"
    depends_on:
      auth-database:
        condition: service_healthy
    networks:
      - clockwise-network

  auth-database:
    image: postgres:latest
    container_name: clockwise-auth-database
    command: postgres -c 'max_connections=200' && postgres -c 'shared_buffers=24MB'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: "exit 0"
    ports:
      - "5432:5432"
    networks:
      - clockwise-network

  kong:
    image: docker.io/library/kong:3.3.0-alpine
    container_name: clockwise-kong
    volumes:
      - ./config/kong/kong.yaml:/usr/local/kong/declarative/kong.yml
      - ./config/kong/plugins/kong-oidc:/usr/local/bin/kong-oidc
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PLUGINS=bundled,kong-oidc
      - KONG_PLUGINSERVER_NAMES=kong-oidc
      - KONG_PLUGINSERVER_KONG_OIDC_QUERY_CMD=/usr/local/bin/kong-oidc -dump
      - KONG_LOG_LEVEL=debug
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_PROXY_LISTEN=0.0.0.0:8000, 0.0.0.0:8443 ssl http2
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
      - KONG_ADMIN_GUI_PATH=/manager
      - KONG_ADMIN_GUI_URL=http://localhost:8002/manager
      - KONG_NGINX_PROXY_PROXY_BUFFER_SIZE=128k
      - KONG_NGINX_PROXY_PROXY_BUFFERS=4 256k
      - KONG_NGINX_PROXY_LARGE_CLIENT_HEADER_BUFFERS=64 512K
    ports:
      - "8000:8000"
      - "8002:8002"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8444:8444"
    networks:
      - clockwise-network

  httpbin:
    image: kennethreitz/httpbin
    container_name: clockwise-httpbin
    ports:
      - "80:80"
    networks:
      - clockwise-network

networks:
  clockwise-network:
    driver: bridge

volumes:
  postgres_data:
  keycloak_data:
